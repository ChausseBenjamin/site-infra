server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Custom 404 page
    error_page 404 /404.html;

    # Cache static assets with versioning (images, fonts, etc.)
    location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Cache CSS and JS files
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Cache PDF files
    location ~* \.(pdf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Short cache for HTML files (they change more frequently)
    location ~* \.(html)$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary Accept-Encoding;
    }

    # No cache for root HTML files (index.html, 404.html)
    location = / {
        expires 5m;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri $uri/ $uri.html =404;
    }

    location = /index.html {
        expires 5m;
        add_header Cache-Control "public, must-revalidate";
    }

    # Handle Hugo's pretty URLs
    location / {
        try_files $uri $uri/ $uri.html =404;
    }

    # Ensure 404.html is accessible
    location = /404.html {
        internal;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
